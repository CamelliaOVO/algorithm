1、max_element(数组的起始,数组的结尾)：求数组中的最大元素
2、min_element(数组的起始,数组的结尾)：求数组中的最小元素

以上两个函数中的数组与指针相联系时（&），函数前面要加上*，因为这两个函数是标准容器的两个成员函数

3、double ans = accumulate(数组的起始,数组的结尾,要加上的别的元素);
这个函数是求和，是标准模板库（STL）的一个成员函数，不用加*


4、哈希表
unordered_map<string,string>smonth = {
            {"Jan", "01"},
            {"Feb", "02"},
            {"Mar", "03"},
            {"Apr", "04"},
            {"May", "05"},
            {"Jun", "06"},
            {"Jul", "07"},
            {"Aug", "08"},
            {"Sep", "09"},
            {"Oct", "10"},
            {"Nov", "11"},
            {"Dec", "12"}
        };

定义了一个键值对字符串类型的哈希表
unordered_set<int>存储单个值（不含重复元素，适合求种类时使用！！！！！），unordered_map<int>存储键值对。

5、stringstream:允许字符串读写
stringstream ss(date); //date是一个总字符串，定义了一个字符串读写流对象ss
string day,month,year;
ss>>day>>month>>year;  //读取流中的各种类型的对象数据，按照顺序

6、count()函数：count 函数是一个标准库函数，用于计算一个序列（通常是容器中的元素）中满足特定条件的元素的数量
count(InputIt first, InputIt last, const T& value);
            InputIt：输入迭代器的类型，可以是对容器元素的引用或者直接是容器的迭代器。
            first：序列的起始迭代器。
            last：序列的结束迭代器（不包括这个位置的元素）。
            value：要计数的值。

count(sentence.begin(), sentence.end(), ' '):计算sentence这个字符串中空格的数量

7、for循环特殊用法
for (const string& sentence: sentences) {
            // 单词数 = 空格数 + 1
            int cnt = count(sentence.begin(), sentence.end(), ' ') + 1;
            res = max(res, cnt);
        }
sentences是一个字符串数组，遍历里面每一个字符串，可以将每个子字符串命名为sentence，实现方法为：const string& sentence
字符串空格用' '

8、substr（）:截取字符串的子字符串
使用方式为str.substr(起始位置，长度):包含这个起始位置，长度从起始位置开始算,如果长度不写，则默认截取到字符串尾部

9、stoi():stoi是一个字符串转换函数，用于将字符串转换为整数。
用法：int num = stoi(str);
